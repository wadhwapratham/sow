<section class="product-of-the-month">
  <div class="month-product-wrapper section-width">
    <div class="ethics-header" data-aos="fade-up" data-aos-duration="700">
      <h2 class="section-title h2">{{ section.settings.heading }}</h2>
    </div>
    <div class="product-image-wrapper">
      <div class="image-over-text-block block-row-first">
        {% for block in section.blocks %}
          {% if forloop.index <= 2 %}
            <div class="card-month-box">
              <p class="block-counter-holder">
                <span class="counter-tag counter">{{ block.settings.counter }}</span
                ><span>{{ block.settings.tag }}</span>
              </p>
              <h3>{{ block.settings.block_head }}</h3>
              <p>{{ block.settings.block_desc }}</p>
            </div>
          {% endif %}
        {% endfor %}
      </div>
      <picture>
        <link rel="preload" as="image" href="{{ block.settings.m_img | img_url:'600x' }}">
        <source srcset="{{ section.settings.d_img | img_url:'1024x' }}" media="(min-width: 769px)">
        <source srcset="{{ section.settings.m_img | img_url:'600x' }}" media="(max-width: 768px)">
        <img src="{{ section.settings.d_img | img_url:'1024x' }}" alt="" width="100" height="100" loading="lazy">
      </picture>
      <div class="image-over-text-block block-row-second">
        {% for block in section.blocks %}
          {% if forloop.index > 2 %}
            <div class="card-month-box">
              <p class="block-counter-holder">
                <span class="counter-tag counter">{{ block.settings.counter }}</span
                ><span>{{ block.settings.tag }}</span>
              </p>
              <h3>{{ block.settings.block_head }}</h3>
              <p>{{ block.settings.block_desc }}</p>
            </div>
          {% endif %}
        {% endfor %}
      </div>
    </div>
  </div>
</section>

{% stylesheet %}
  section.product-of-the-month {
      padding: 64px 0 72px 0;
  }
  .month-product-wrapper .ethics-header {
      margin-bottom: 64px;
  }
  .product-image-wrapper picture img {
      width: 100%;
      height: auto;
      min-height: 660px;
      object-fit: cover;
  }
  .block-counter-holder {
      font-size: 96px;
      line-height: 144px;
      font-weight: 600;
      background: linear-gradient(to right, #FFCE9E 11%, #65F2A7 100%);
      -webkit-background-clip: text;
      -webkit-text-fill-color: transparent;
      max-width: max-content;
      margin: 0 auto 19px auto;
  }
  .card-month-box {
      max-width: 429px;
      min-height: 280px;
      text-align: center;
  }
  .card-month-box h3 {
      color: #054327;
      font-size: 25.92px;
      font-weight: 600;
      margin-bottom: 28px;
      line-height: 26px;
  }
  .card-month-box p:last-child {
      color: #2B2928;
      font-size: 14px;
      font-weight: 500;
      line-height: 26px;
      margin: 0;
  }
  .image-over-text-block {
      display: flex;
      justify-content: space-between;
      position: absolute;
      width: 100%;
      left: 0;
      max-width: 1376px;
      margin: auto;
      right: 0;
  }
  .product-image-wrapper {
      position: relative;
  }
  .image-over-text-block.block-row-first {
      top: 0;
  }
  .image-over-text-block.block-row-second {
      bottom: 0;
  }
  @media screen and (max-width: 1280px){
    .block-counter-holder {
      font-size: 76px;
      line-height: 100px;
    }
    .product-image-wrapper picture img {
      width: 70%;
      margin: 0 auto;
      display: block;
    }
    .card-month-box p:last-child {
      line-height: 140%;
    }
    .card-month-box {
      max-width: 300px;
    }
    .card-month-box h3 {
      font-size: 21px;
      margin-bottom: 10px;
      line-height: 100%;
    }
  }

  @media screen and (max-width: 1200px) {
      .block-counter-holder {
          font-size: 56px;
          line-height: 70px;
      }
      .product-image-wrapper picture img {
          width: 100%;
          object-fit: contain;
          height: 550px;
          min-height: 500px;
      }
  }

  @media screen and (max-width: 1024px){
    .card-month-box {
          max-width: 220px;
      }
      .card-month-box p:last-child {
          font-size: 12px;
      }
  }

  @media screen and (max-width: 650px){
    .product-image-wrapper {
      height: 300vw;
    }
    .product-image-wrapper picture img {
      height: 100%;
    }
    .image-over-text-block {
      flex-direction: column;
      align-items: center;
    }
    .image-over-text-block.block-row-second {
      bottom: -15vw;
    }
    section.product-of-the-month {
      padding: 48px 0;
    }
  }

  @media screen and (max-width: 480px){
      .card-month-box {
        max-width: 100%;
    }
    .block-counter-holder {
      font-size: 74px;
      line-height: 100px;
    }
    .card-month-box h3 {
      font-size: 20px;
      margin-bottom: 16px;
      line-height: 24px;
    }
    .card-month-box p:last-child {
      font-size: 14px;
      line-height: 20px;
    }
    .product-image-wrapper {
        height: 430vw;
      }
  }

  @media screen and (max-width: 390px){
    .product-image-wrapper {
        height: 460vw;
    }
  }


  @media screen and (max-width: 350px) {
      .product-image-wrapper {
          height: 450vw;
      }
  }
{% endstylesheet %}

<script>
document.addEventListener("DOMContentLoaded", function () {
    const counterElements = document.querySelectorAll('.counter');
    const countersArray = Array.from(counterElements);

    // Define the counter function
    function startCounters() {
        countersArray.forEach(item => {
            let targetValue = parseFloat(item.textContent);  // Ensure this works with float numbers
            let count = 0;
            let increment = targetValue / 250;  // Adjust the divisor to slow down the counter (larger divisor means slower)
            let speed = 10;  // Milliseconds between increments

            function updateCounter() {
                count += increment;
                if (count >= targetValue) {
                    count = targetValue;
                    clearInterval(interval);
                }
                item.textContent = Number.isInteger(targetValue) ? Math.floor(count) : count.toFixed(1);
            }

            let interval = setInterval(updateCounter, speed);
        });
    }

    // Create the intersection observer
    const observer = new IntersectionObserver((entries, observer) => {
        entries.forEach(entry => {
            if (entry.isIntersecting) {
                startCounters();
                observer.unobserve(entry.target);  // Stop observing once the function is triggered
            }
        });
    }, {
        threshold: 0.5 // Trigger when 50% of the section is in viewport
    });

    // Observe the section containing the counters
    const section = document.querySelector('.product-of-the-month');
    if (section) {
        observer.observe(section);
    }
});

</script>

{% schema %}
{
  "name": "Product of the month",
  "settings": [
    {
      "type": "text",
      "id": "heading",
      "label": "Section Heading"
    },
    {
      "type": "image_picker",
      "id": "d_img",
      "label": "Desktop Image"
    },
    {
      "type": "image_picker",
      "id": "m_img",
      "label": "Mobile Image"
    }
  ],
  "blocks": [
    {
      "type": "repeater",
      "name" : "Product Feature",
      "limit": 4,
      "settings": [
        {
          "type": "text",
          "id": "counter",
          "label": "Counter"
        },
        {
          "type": "text",
          "id": "tag",
          "label": "Counter Description"
        },
        {
          "type": "text",
          "id": "block_head",
          "label": "Block Heading"
        },
        {
          "type": "textarea",
          "id": "block_desc",
          "label": "Block Description"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Product of the month"
    }
  ]
}
{% endschema %}
